/* Instants in time.

Instants use the mighty 128-bit `:ddouble` timestamps to represent a `:duration`
since the `epoch`.
This gives very high range and precision (up 31 decimal digits).
It spans about 10^300^ years
into the past and future, well beyond the expected life span of the universe.
Any time can be expressed with atto-second (10^-18^) precision
up to about 300,000 years in the past and future, and with pico-second (10^-12^)
precision any time since the age of the universe (about 13.8 billion years ago)
up to 30 billion years into the future. For durations under 300 years, the precision
is in excess of a zepto second (10^-21^). For comparison, it takes light about
500 zepto-seconds to travel the length of an hydrogen atom.

```unchecked
> instant(2100,1,1,0,0,0,1.0e-21).show(21)  // 1 zepto-second after Jan 1, 2100
"3155760037.000000000000000000001s"
> instant(300000,1,1,0,0,0,1.0e-18).show(18) // 1 atto-second after Jan 1, 300000
"9403971696037.000000000000000001s"
> instant(-13.82e9.int,1,1,0,0,0,1.0e-12).show(12) // 1 pico-second after the birth of the universe
"-436117139753903999.999999999999s"
```

Internally, instants are represented in a certain time scale (`:timescale`) for
efficiency and precision. They automatically convert between different time scales
when necessary (for example when comparing instants in time, or calculating durations
between UTC calendar times).

Time durations (`:duration`) are always in SI seconds (as measured on the Earth's geoid).

## References { - }

~ Begin Bibliography { caption:"9" }

~~ BibItem { #blackbody; bibitem-label:"[1]"; searchterm:"Claudine+Thomas+Accuracy+of+TAI" }
Claudine Thomas,
_The Accuracy of TAI_.
Proceedings of the 29th Annual Precise Time and Time Interval Systems and Applications Meeting,
Long Beach, California, December 1997, pp. 19--26. [pdf](https://tycho.usno.navy.mil/ptti/1997papers/Vol%2029_02.pdf)
~~

~ End Bibliography

\/
*/
module interface std/time/instant
 
//------------------------------
//#kki: import declarations
 
private import std/core/types = std/core/types = "";
private import std/core = std/core = "";
private import std/num/ddouble = std/num/ddouble = "";
private import std/time/date = std/time/date = "";
private import std/time/timestamp = std/time/timestamp = "";
private import std/time/duration = std/time/duration = "";
 
//------------------------------
//#kki: fixity declarations
 
 
//------------------------------
//#kki: local imported aliases
 
// Time spans are a time duration in some time scale represented as a `:ddouble`;
// this gives it very high precision and range to represent time very precisely.
// (see the [`instant`](std_time_instant.html) module)
local alias std/time/timestamp/timespan = std/num/ddouble/ddouble = 1;
 
//------------------------------
//#kki: type declarations
 
// A time scale defines how time is measured: the rate and unit of time,
// and how it can be converted to- and from TAI.\
// For time calculations, usually the [TAI](https://en.wikipedia.org/wiki/International_Atomic_Time)
// (international atomic time) time scale (`ts-tai`) is used which is time measured as SI seconds on the Earths geoid.
// Another common time scale is UTC (`std/time/utc/ts-utc`) which also uses SI second time units but can contain leap seconds.
public type timescale {
  // A time scale defines how time is measured: the rate and unit of time,
// and how it can be converted to- and from TAI.\
// For time calculations, usually the [TAI](https://en.wikipedia.org/wiki/International_Atomic_Time)
// (international atomic time) time scale (`ts-tai`) is used which is time measured as SI seconds on the Earths geoid.
// Another common time scale is UTC (`std/time/utc/ts-utc`) which also uses SI second time units but can contain leap seconds.
  private con Timescale(name: std/core/types/string, unit: std/core/types/string, from-tai: (std/time/duration/duration) -> std/time/timestamp/timestamp, to-tai: (std/time/timestamp/timestamp) -> std/time/duration/duration, mb-seconds-in-day: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> (std/time/timestamp/timespan == 1 std/num/ddouble/ddouble)>, mb-to-mjd2000: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : (std/time/timestamp/timespan == 1 std/num/ddouble/ddouble)) -> std/num/ddouble/ddouble>, mb-from-mjd2000: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (name : std/core/types/string, unit : std/core/types/string, from-tai : (std/time/duration/duration) -> std/time/timestamp/timestamp, to-tai : (std/time/timestamp/timestamp) -> std/time/duration/duration, mb-seconds-in-day : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> (std/time/timestamp/timespan == 1 std/num/ddouble/ddouble)>, mb-to-mjd2000 : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : (std/time/timestamp/timespan == 1 std/num/ddouble/ddouble)) -> std/num/ddouble/ddouble>, mb-from-mjd2000 : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) -> timescale;
};
/* Represents a precise instant in time.

Internally, instants are represented in a certain time scale (`:timescale`) for
efficiency and precision. They automatically convert between different time scales
when necessary (for example when comparing instants in time, or calculating durations
between UTC calendar times).
*/
public type instant {
  /* Represents a precise instant in time.

Internally, instants are represented in a certain time scale (`:timescale`) for
efficiency and precision. They automatically convert between different time scales
when necessary (for example when comparing instants in time, or calculating durations
between UTC calendar times).
*/
  private con Instant(since: std/time/timestamp/timestamp, ts: timescale) : (since : std/time/timestamp/timestamp, ts : timescale) -> instant;
};
 
//------------------------------
//#kki: declarations
 
// Automatically generated. Retrieves the `name` constructor field of the `:timescale` type.
public fun name : (timescale : timescale) -> std/core/types/string;
// Automatically generated. Retrieves the `unit` constructor field of the `:timescale` type.
private fun unit : (timescale : timescale) -> std/core/types/string;
// Automatically generated. Retrieves the `from-tai` constructor field of the `:timescale` type.
private fun from-tai : (timescale : timescale) -> ((std/time/duration/duration) -> std/time/timestamp/timestamp);
// Automatically generated. Retrieves the `to-tai` constructor field of the `:timescale` type.
private fun to-tai : (timescale : timescale) -> ((std/time/timestamp/timestamp) -> std/time/duration/duration);
// Automatically generated. Retrieves the `mb-seconds-in-day` constructor field of the `:timescale` type.
private fun mb-seconds-in-day : (timescale : timescale) -> (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>;
// Automatically generated. Retrieves the `mb-to-mjd2000` constructor field of the `:timescale` type.
private fun mb-to-mjd2000 : (timescale : timescale) -> (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>;
// Automatically generated. Retrieves the `mb-from-mjd2000` constructor field of the `:timescale` type.
private fun mb-from-mjd2000 : (timescale : timescale) -> (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>;
public fun .copy : (timescale, name : (std/core/types/optional :: V -> V)<std/core/types/string>, unit : (std/core/types/optional :: V -> V)<std/core/types/string>, from-tai : (std/core/types/optional :: V -> V)<(std/time/duration/duration) -> std/time/timestamp/timestamp>, to-tai : (std/core/types/optional :: V -> V)<(std/time/timestamp/timestamp) -> std/time/duration/duration>, mb-seconds-in-day : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>, mb-to-mjd2000 : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>, mb-from-mjd2000 : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>) -> timescale;
// Automatically generated. Retrieves the `since` constructor field of the `:instant` type.
private fun since : (instant : instant) -> std/time/timestamp/timestamp;
// Automatically generated. Retrieves the `ts` constructor field of the `:instant` type.
private fun ts : (instant : instant) -> timescale;
public fun .copy.1 : (instant, since : (std/core/types/optional :: V -> V)<std/time/timestamp/timestamp>, ts : (std/core/types/optional :: V -> V)<timescale>) -> instant;
// Return `:timestamp` since 2000-01-01 in the time scale of the instant
public fun timestamp : (i : instant) -> std/time/timestamp/timestamp;
// Does this timescale have leap seconds?
public fun has-leap-seconds : (ts : timescale) -> std/core/types/bool;
// relative to the MJD epoch
private val mjd-epoch-delta : std/time/timestamp/timespan;
/*----------------------------------------------------------------------------
  Julian Date
----------------------------------------------------------------------------*/
private val jd-epoch-delta : std/time/timestamp/timespan;
// The seconds in the day of instant `i` (in its time scale).
public fun seconds-in-day : (i : instant) -> std/time/timestamp/timespan;
// A time scale defines how time is measured: the rate and unit of time,
// and how it can be converted to- and from TAI.\
// For time calculations, usually the [TAI](https://en.wikipedia.org/wiki/International_Atomic_Time)
// (international atomic time) time scale (`ts-tai`) is used which is time measured as SI seconds on the Earths geoid.
// Another common time scale is UTC (`std/time/utc/ts-utc`) which also uses SI second time units but can contain leap seconds.
private fun .create-Timescale : (name : std/core/types/string, unit : std/core/types/string, from-tai : (std/time/duration/duration) -> std/time/timestamp/timestamp, to-tai : (std/time/timestamp/timestamp) -> std/time/duration/duration, mb-seconds-in-day : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>, mb-to-mjd2000 : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>, mb-from-mjd2000 : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>) -> timescale;
// Return the time scale that instant `i` uses.
public fun timescale : (i : instant) -> timescale;
// Create a new time scale given `name`, two inverse function `from-tai` and `to-tai`,
// and an optional function that returns the seconds in the day of the instant.
// The time unit defaults to `name`.
public fun timescale.1 : (name : std/core/types/string, from-tai : (std/time/duration/duration) -> std/time/timestamp/timestamp, to-tai : (std/time/timestamp/timestamp) -> std/time/duration/duration, unit : (std/core/types/optional :: V -> V)<std/core/types/string>, seconds-in-day : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>, to-mjd2000 : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>, from-mjd2000 : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>) -> timescale;
// Create a new time scale based on SI seconds (as measured on the Earth's geoid) with a given
//  `name`, a fixed `offset` (=`duration0`) from TAI (e.g. GPS = TAI - 19), and
// a `epoch-y2k` (= `timestamp0`) which is the timestamp of the 2000-01-01 date in that timescale
// e.g. for a timescale `ts`:\
// `epoch-y2k = instant(2000,1,1,cal=iso-calendar(ts)).since-in(ts)`
public fun tai-timescale : (name : std/core/types/string, offset : (std/core/types/optional :: V -> V)<std/time/duration/duration>) -> timescale;
// The [TAI](https://en.wikipedia.org/wiki/International_Atomic_Time) (International atomic time)
// time scale is based on SI seconds measured on the Earth's geoid, with a 2000-01-01 TAI `epoch`.
public val ts-tai : timescale;
// Add a time span to an instant in time.
// This is only safe if the time unit of the timespan is the
// same as that of the instant.
private fun unsafe-add : (i : instant, tspan : std/time/timestamp/timespan) -> instant;
// Convert a timespan between time scales
private fun convert : (t : std/time/timestamp/timestamp, from : timescale, to : timescale) -> std/time/timestamp/timestamp;
// Return a `:timestamp` for instant `i` in a certain time scale `tscale`.
public fun timestamp-in : (i : instant, tscale : timescale) -> std/time/timestamp/timestamp;
// Change the internal representation of an instant to use another timescale.
// Only used in special cases for efficiency. For example, when comparing an
// instant in TAI time to thousands of UTC times, it is more efficient to convert
// the TAI time to UTC first to avoid converting at each comparision.
public fun use-timescale : (i : instant, tscale : timescale) -> instant;
// Add a duration to an instant in time.
// Note: this generally entails conversion to TAI time (`ts-tai`).
// See also `add-duration-in` and `add-days` to add
// in direct time scale units.
public fun (+) : (i : instant, d : std/time/duration/duration) -> instant;
// Subtract a duration from an instant in time.
public fun (-) : (i : instant, d : std/time/duration/duration) -> instant;
// Return the (TAI) SI second duration since the `epoch` at this instant.
public fun duration : (i : instant) -> std/time/duration/duration;
// Return the duration between to instants in time.
public fun (-.1) : (i : instant, j : instant) -> std/time/duration/duration;
// Are two timescales the same?
public fun (==) : (t1 : timescale, t2 : timescale) -> std/core/types/bool;
// Compare two `:instant`s in time.
public fun compare : (i : instant, j : instant) -> std/core/types/order;
public fun (==.1) : (i : instant, j : instant) -> std/core/types/bool;
// Given a `:duration` since the `epoch`, return a `:timespan` for that instant in time scale `ts`.
public fun from-tai.1 : (ts : timescale, d : std/time/duration/duration) -> std/time/timestamp/timestamp;
// Create an instant from a time stamp `t` interpreted in time scale `ts`.\
// Be careful to ensure that `t` should indeed be interpreted in the given time scale.
public fun instant : (ts : timescale, t : std/time/timestamp/timestamp) -> instant;
// Return the instant at (TAI) SI seconds duration since the `epoch`.
public fun instant.1 : (d : std/time/duration/duration) -> instant;
// Return the instant in time scale `ts`, `days` and `secs` after 2000-01-01 in that timescale.
public fun instant.2 : (ts : timescale, days : std/core/types/int, secs : std/time/timestamp/timespan, leap : (std/core/types/optional :: V -> V)<std/core/types/int>) -> instant;
// Return the `:duration` since the `epoch` for a timestamp `t` interpreted in time scale `ts`.
public fun to-tai.1 : (ts : timescale, t : std/time/timestamp/timestamp) -> std/time/duration/duration;
public fun (!=) : (i : instant, j : instant) -> std/core/types/bool;
public fun (<) : (i : instant, j : instant) -> std/core/types/bool;
public fun (<=) : (i : instant, j : instant) -> std/core/types/bool;
public fun (>) : (i : instant, j : instant) -> std/core/types/bool;
public fun (>=) : (i : instant, j : instant) -> std/core/types/bool;
// Add `days` days to the instant.
public fun add-days : (i : instant, days : std/core/types/int) -> instant;
/* Add a duration of `t` seconds of time scale `tscale`.
This can for example be used to add Unix or NTP seconds where leap seconds
are ignored (allthough it is recommended in that case to use
`:time` and add logical days etc).
```
> instant(2005,12,31).add-duration-in( ts-unix, (24*3600).timespan ).time
2006-01-01T00:00:00Z

> (instant(2005,12,31) + 24.hours).time
2005-12-31T23:59:60Z
```
*/
public fun add-duration-in : (i : instant, tscale : timescale, t : std/time/timestamp/timespan) -> instant;
// Return days since 2000-01-01 in the time scale of the instant
public fun days : (i : instant) -> std/core/types/int;
// Return days since 2000-01-01 in the time scale of the instant,
// together with the clock on that day.
public fun days-clock : (i : instant) -> (std/core/types/int, std/time/date/clock);
// Our epoch is set at 2000-01-01 TAI (which is equal to 1999-12-31T23:59:28Z UTC).
//
// Another candidate epoch could have been the standard [J2000] epoch ([`epoch-j2000`](std_time_astro.html#epoch_j2000)),
// which equals 2000-01-01T12:00:00 TT (terrestrial time).
// However, that would mean that for the most common time scales, namely UTC and TAI, there would always be a
// fractional offset (of 32.184s) for common time stamps. Moreover, by having an epoch at noon there would be
// an extra correction needed for calendar date calculations too.
//
// Similarly, the standard Unix epoch of 1970-01-01Z UTC is not ideal either since the UTC offset with TAI
// was fractional at that time (namely 8.000082s).
//
// Finally, after 1996, TAI was corrected for black-body radiation [@blackbody] which makes
// the 2000-01-01 epoch a very precisely defined point in time.
//
//
// [J2000]: https://en.wikipedia.org/wiki/Equinox_(celestial_coordinates)#J2000.0
public val epoch : instant;
private val gps2000 : std/time/duration/duration;
// Create an instant from a raw GPS time since the GPS epoch (1980-01-06Z)
public fun gps-instant : (gps : std/time/duration/duration) -> instant;
// Create an instant from a GPS time in weeks and SI seconds since the GPS epoch (1980-01-06Z)
public fun gps-instant.1 : (weeks : std/core/types/int, secs : std/time/duration/duration) -> instant;
// The [GPS](https://en.wikipedia.org/wiki/Global_Positioning_System#Timekeeping) time scale based
// on SI seconds with a 1980-01-06 GPS epoch.\
// GPS = TAI - 19s.
public val ts-gps : timescale;
// Get the GPS time in SI seconds since the GPS epoch (1980-01-06Z)
public fun gps-timestamp : (i : instant) -> std/time/duration/duration;
// Get the GPS time as weeks and SI seconds in the week since the GPS epoch (1980-01-06Z)
public fun gps-week-timestamp : (i : instant) -> (std/core/types/int, std/time/duration/duration);
// Create an instant given a [modified julian day](https://en.wikipedia.org/wiki/Julian_day).
// and time scale `ts`.\
// `modified-julian-day = julian-day - 2400000.5`
public fun instant-at-mjd.1 : (mjd : std/num/ddouble/ddouble, ts : timescale) -> instant;
// Create an instant given a [modified julian day](https://en.wikipedia.org/wiki/Julian_day).
// and time scale `ts`.\
// `modified-julian-day = julian-day - 2400000.5`
public fun instant-at-mjd : (mjd : std/core/types/double, ts : timescale) -> instant;
// Create an instant given a [julian day](https://en.wikipedia.org/wiki/Julian_day)
// and time scale `ts` .
public fun instant-at-jd.1 : (jd : std/num/ddouble/ddouble, ts : timescale) -> instant;
// Create an instant given a [julian day](https://en.wikipedia.org/wiki/Julian_day).
public fun instant-at-jd : (jd : std/core/types/double, ts : timescale) -> instant;
// Return the modified julian day in a given time scale `ts` for an instant `i`.
// Can also pass an optional `delta` (=`timespan0`) that is added to the raw timestamp of `i`
// before conversion (used in `std/time/time` to take timezones into account)
public fun mjd : (i : instant, tscale : timescale, tzdelta : (std/core/types/optional :: V -> V)<std/time/timestamp/timespan>) -> std/num/ddouble/ddouble;
/* Return the julian day in a given time scale `ts` for an instant `i`.
Properly takes leap seconds into account when calculating the fraction of the day
in a UTC calendar. For example:
````
> time(2014,12,31,23,59,59).jd
2457023.499988425925926

> time(2015,12,31,23,59,59).jd
2457388.499988425925926

> time(2016,12,31,23,59,59).jd
2457754.499976852119767

> time(2016,12,31,23,59,60).jd
2457754.499988426059884
````
.
*/
public fun jd : (i : instant, ts : timescale) -> std/num/ddouble/ddouble;
// The maximum of two instants.
public fun max : (i : instant, j : instant) -> instant;
// The minimum of two instants.
public fun min : (i : instant, j : instant) -> instant;
// Round an instant to a certain precision (`prec` is number of digits of the fraction of the second).\
// Takes special care for instants that use a UTC timescale to round into leap seconds if appropriate.
public fun round-to-prec : (i : instant, prec : std/core/types/int) -> instant;
// Internal: show an instant as a raw timestamp in a given precision, postfixed with the time scale name.
public fun show-raw : (i : instant, max-prec : (std/core/types/optional :: V -> V)<std/core/types/int>, secs-width : (std/core/types/optional :: V -> V)<std/core/types/int>, unit : (std/core/types/optional :: V -> V)<std/core/types/string>) -> std/core/types/string;
// Show an instant as a number of (TAI) SI seconds since the `epoch` in a given precision.
// This can be used as an unambigious time stamp.
public fun show : (i : instant, max-prec : (std/core/types/optional :: V -> V)<std/core/types/int>, secs-width : (std/core/types/optional :: V -> V)<std/core/types/int>) -> std/core/types/string;
// Show a timestamp with an optional maximum precision (`max-prec` (=`9`)) and
// minimum width for the seconds (=`1`).
public fun show.1 : (t : std/time/timestamp/timestamp, max-prec : (std/core/types/optional :: V -> V)<std/core/types/int>, secs-width : (std/core/types/optional :: V -> V)<std/core/types/int>, unit : (std/core/types/optional :: V -> V)<std/core/types/string>) -> std/core/types/string;
// The [TT](https://en.wikipedia.org/wiki/Terrestrial_Time) (Terrestrial time)
// time scale is based on SI seconds with a 1977-01-01 TAI `epoch`. It is the
// continuation of TDT (Terrestrial dynamic time) and ET (Ephemeris time). TT
// is defined as: TT = TAI + 32.184s.
public val ts-tt : timescale;
private val tt2000 : std/time/duration/duration;
// Get the TT time in SI seconds since the TT epoch (1977-01-01 TAI)
public fun tt-instant : (i : instant) -> std/time/duration/duration;
// Create an instant from a raw TT time since the TT epoch (1977-01-01 TAI)
public fun tt-instant.1 : (tt : std/time/duration/duration) -> instant;
 
//------------------------------
//#kki: external declarations
 
 
//------------------------------
//#kki: inline definitions
 
//.inline-section
inline fun name // inline size: 0
  = fn(timescale: timescale){
    match (timescale) {
      ((.skip std/time/instant/Timescale((.x: std/core/types/string) : std/core/types/string, (.pat0: std/core/types/string) : std/core/types/string, (.pat1: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat2: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat3: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
         -> .x;
    };
  };
inline fun unit // inline size: 0
  = fn(timescale: timescale){
    match (timescale) {
      ((.skip std/time/instant/Timescale((.pat0: std/core/types/string) : std/core/types/string, (.x: std/core/types/string) : std/core/types/string, (.pat1: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat2: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat3: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
         -> .x;
    };
  };
inline fun from-tai // inline size: 0
  = fn(timescale: timescale){
    match (timescale) {
      ((.skip std/time/instant/Timescale((.pat0: std/core/types/string) : std/core/types/string, (.pat1: std/core/types/string) : std/core/types/string, (.x: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat2: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat3: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
         -> .x;
    };
  };
inline fun to-tai // inline size: 0
  = fn(timescale: timescale){
    match (timescale) {
      ((.skip std/time/instant/Timescale((.pat0: std/core/types/string) : std/core/types/string, (.pat1: std/core/types/string) : std/core/types/string, (.pat2: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.x: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat3: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
         -> .x;
    };
  };
inline fun mb-seconds-in-day // inline size: 0
  = fn(timescale: timescale){
    match (timescale) {
      ((.skip std/time/instant/Timescale((.pat0: std/core/types/string) : std/core/types/string, (.pat1: std/core/types/string) : std/core/types/string, (.pat2: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat3: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.x: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
         -> .x;
    };
  };
inline fun mb-to-mjd2000 // inline size: 0
  = fn(timescale: timescale){
    match (timescale) {
      ((.skip std/time/instant/Timescale((.pat0: std/core/types/string) : std/core/types/string, (.pat1: std/core/types/string) : std/core/types/string, (.pat2: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat3: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.x: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
         -> .x;
    };
  };
inline fun mb-from-mjd2000 // inline size: 0
  = fn(timescale: timescale){
    match (timescale) {
      ((.skip std/time/instant/Timescale((.pat0: std/core/types/string) : std/core/types/string, (.pat1: std/core/types/string) : std/core/types/string, (.pat2: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat3: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat5: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.x: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
         -> .x;
    };
  };
fun .copy // inline size: 8
  = fn(.this: timescale, name: (std/core/types/optional :: V -> V)<std/core/types/string>, unit: (std/core/types/optional :: V -> V)<std/core/types/string>, from-tai: (std/core/types/optional :: V -> V)<(std/time/duration/duration) -> std/time/timestamp/timestamp>, to-tai: (std/core/types/optional :: V -> V)<(std/time/timestamp/timestamp) -> std/time/duration/duration>, mb-seconds-in-day: (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>, mb-to-mjd2000: (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>, mb-from-mjd2000: (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>){
    std/time/instant/Timescale((match (name) {
        ((std/core/types/Optional((.name.180: std/core/types/string) : std/core/types/string) : (std/core/types/optional :: V -> V)<std/core/types/string> ) as .pat: ((std/core/types/optional :: V -> V)<std/core/types/string>))
           -> .name.180;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<std/core/types/string> ) as .pat0: ((std/core/types/optional :: V -> V)<std/core/types/string>))
           -> (match (.this) {
            ((.skip std/time/instant/Timescale((.x: std/core/types/string) : std/core/types/string, (.pat00: std/core/types/string) : std/core/types/string, (.pat10: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat2: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat3: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat1: timescale)
               -> .x;
          });
      }), (match (unit) {
        ((std/core/types/Optional((.unit.186: std/core/types/string) : std/core/types/string) : (std/core/types/optional :: V -> V)<std/core/types/string> ) as .pat11: ((std/core/types/optional :: V -> V)<std/core/types/string>))
           -> .unit.186;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<std/core/types/string> ) as .pat20: ((std/core/types/optional :: V -> V)<std/core/types/string>))
           -> (match (.this) {
            ((.skip std/time/instant/Timescale((.pat01: std/core/types/string) : std/core/types/string, (.x0: std/core/types/string) : std/core/types/string, (.pat12: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat21: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat30: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat40: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat50: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat6: timescale)
               -> .x0;
          });
      }), (match (from-tai) {
        ((std/core/types/Optional((.from-tai.193: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/core/types/optional :: V -> V)<(std/time/duration/duration) -> std/time/timestamp/timestamp> ) as .pat31: ((std/core/types/optional :: V -> V)<(std/time/duration/duration) -> std/time/timestamp/timestamp>))
           -> .from-tai.193;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/time/duration/duration) -> std/time/timestamp/timestamp> ) as .pat41: ((std/core/types/optional :: V -> V)<(std/time/duration/duration) -> std/time/timestamp/timestamp>))
           -> (match (.this) {
            ((.skip std/time/instant/Timescale((.pat02: std/core/types/string) : std/core/types/string, (.pat13: std/core/types/string) : std/core/types/string, (.x1: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat22: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat32: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat42: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat51: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat7: timescale)
               -> .x1;
          });
      }), (match (to-tai) {
        ((std/core/types/Optional((.to-tai.200: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/core/types/optional :: V -> V)<(std/time/timestamp/timestamp) -> std/time/duration/duration> ) as .pat52: ((std/core/types/optional :: V -> V)<(std/time/timestamp/timestamp) -> std/time/duration/duration>))
           -> .to-tai.200;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/time/timestamp/timestamp) -> std/time/duration/duration> ) as .pat60: ((std/core/types/optional :: V -> V)<(std/time/timestamp/timestamp) -> std/time/duration/duration>))
           -> (match (.this) {
            ((.skip std/time/instant/Timescale((.pat03: std/core/types/string) : std/core/types/string, (.pat14: std/core/types/string) : std/core/types/string, (.pat23: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.x2: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat33: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat43: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat53: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat8: timescale)
               -> .x2;
          });
      }), (match (mb-seconds-in-day) {
        ((std/core/types/Optional((.mb-seconds-in-day.206: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>> ) as .pat70: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>))
           -> .mb-seconds-in-day.206;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>> ) as .pat80: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>))
           -> (match (.this) {
            ((.skip std/time/instant/Timescale((.pat04: std/core/types/string) : std/core/types/string, (.pat15: std/core/types/string) : std/core/types/string, (.pat24: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat34: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.x3: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat44: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat54: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat9: timescale)
               -> .x3;
          });
      }), (match (mb-to-mjd2000) {
        ((std/core/types/Optional((.mb-to-mjd2000.212: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>> ) as .pat90: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>))
           -> .mb-to-mjd2000.212;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>> ) as .pat100: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>))
           -> (match (.this) {
            ((.skip std/time/instant/Timescale((.pat05: std/core/types/string) : std/core/types/string, (.pat17: std/core/types/string) : std/core/types/string, (.pat25: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat35: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat45: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.x4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat55: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat16: timescale)
               -> .x4;
          });
      }), (match (mb-from-mjd2000) {
        ((std/core/types/Optional((.mb-from-mjd2000.218: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>> ) as .pat110: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>))
           -> .mb-from-mjd2000.218;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>> ) as .pat120: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>))
           -> (match (.this) {
            ((.skip std/time/instant/Timescale((.pat06: std/core/types/string) : std/core/types/string, (.pat19: std/core/types/string) : std/core/types/string, (.pat26: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat36: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat46: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat56: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.x5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat18: timescale)
               -> .x5;
          });
      }));
  };
inline fun since // inline size: 0
  = fn(instant: instant){
    match (instant) {
      ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat0: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat1: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat3: std/core/types/string) : std/core/types/string, (.pat4: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat2: timescale) : timescale) : instant ) as .pat: instant)
         -> .x;
    };
  };
inline fun ts // inline size: 0
  = fn(instant: instant){
    match (instant) {
      ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat1: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat2: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat0: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat3: std/core/types/string) : std/core/types/string, (.pat4: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x: timescale) : timescale) : instant ) as .pat: instant)
         -> .x;
    };
  };
fun .copy.1 // inline size: 3
  = fn(.this: instant, since: (std/core/types/optional :: V -> V)<std/time/timestamp/timestamp>, ts: (std/core/types/optional :: V -> V)<timescale>){
    std/time/instant/Instant((match (since) {
        ((std/core/types/Optional((.since.251: std/time/timestamp/timestamp) : std/time/timestamp/timestamp) : (std/core/types/optional :: V -> V)<std/time/timestamp/timestamp> ) as .pat: ((std/core/types/optional :: V -> V)<std/time/timestamp/timestamp>))
           -> .since.251;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<std/time/timestamp/timestamp> ) as .pat0: ((std/core/types/optional :: V -> V)<std/time/timestamp/timestamp>))
           -> (match (.this) {
            ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat00: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat10: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat3: std/core/types/string) : std/core/types/string, (.pat4: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat2: timescale) : timescale) : instant ) as .pat1: instant)
               -> .x;
          });
      }), (match (ts) {
        ((std/core/types/Optional((.ts.257: timescale) : timescale) : (std/core/types/optional :: V -> V)<timescale> ) as .pat11: ((std/core/types/optional :: V -> V)<timescale>))
           -> .ts.257;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<timescale> ) as .pat20: ((std/core/types/optional :: V -> V)<timescale>))
           -> (match (.this) {
            ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat13: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat21: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat01: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat50: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat60: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat70: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat80: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat90: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x0: timescale) : timescale) : instant ) as .pat12: instant)
               -> .x0;
          });
      }));
  };
inline fun timestamp // inline size: 0
  = fn(i: instant){
    match (i) {
      ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat0: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat1: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat3: std/core/types/string) : std/core/types/string, (.pat4: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat2: timescale) : timescale) : instant ) as .pat: instant)
         -> .x;
    };
  };
fun has-leap-seconds // inline size: 1
  = fn(ts: timescale){
    match ((match (ts) {
      ((.skip std/time/instant/Timescale((.pat00: std/core/types/string) : std/core/types/string, (.pat10: std/core/types/string) : std/core/types/string, (.pat2: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat3: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.x: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat1: timescale)
         -> .x;
    })) {
      ((std/core/types/Nothing() : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan> ) as .pat: ((std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>))
         -> std/core/types/False;
      (.pat0: ((std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>))
         -> std/core/types/True;
    };
  };
inline val jd-epoch-delta // inline size: 0
  = std/num/ddouble/Ddouble(2400000.5, 0.0);
fun seconds-in-day // inline size: 2
  = fn(i: instant){
    match ((match ((match (i) {
      ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat10: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat20: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat00: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat50: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat60: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x0: timescale) : timescale) : instant ) as .pat6: instant)
         -> .x0;
    })) {
      ((.skip std/time/instant/Timescale((.pat0: std/core/types/string) : std/core/types/string, (.pat1: std/core/types/string) : std/core/types/string, (.pat2: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat3: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.x: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
         -> .x;
    })) {
      ((std/core/types/Nothing() : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan> ) as .pat11: ((std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>))
         -> std/time/timestamp/solar-secs-per-day;
      ((.skip std/core/types/Just((f: (t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan) : (t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan> ) as .pat01: ((std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>))
         -> f((match (i) {
          ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat02: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat13: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x1: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat31: std/core/types/string) : std/core/types/string, (.pat41: std/core/types/string) : std/core/types/string, (.pat51: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat61: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat70: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat80: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat90: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat21: timescale) : timescale) : instant ) as .pat12: instant)
             -> .x1;
        }));
    };
  };
fun .create-Timescale // inline size: 4
  = fn(name: std/core/types/string, unit: std/core/types/string, from-tai: (std/time/duration/duration) -> std/time/timestamp/timestamp, to-tai: (std/time/timestamp/timestamp) -> std/time/duration/duration, mb-seconds-in-day: (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>, mb-to-mjd2000: (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>, mb-from-mjd2000: (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>){
    std/time/instant/Timescale(name, unit, from-tai, to-tai, (match (mb-seconds-in-day) {
        ((std/core/types/Optional((.mb-seconds-in-day.410: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>> ) as .pat: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>))
           -> .mb-seconds-in-day.410;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>> ) as .pat0: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>))
           -> std/core/types/Nothing<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>;
      }), (match (mb-to-mjd2000) {
        ((std/core/types/Optional((.mb-to-mjd2000.415: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>> ) as .pat1: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>))
           -> .mb-to-mjd2000.415;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>> ) as .pat2: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>))
           -> std/core/types/Nothing<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>;
      }), (match (mb-from-mjd2000) {
        ((std/core/types/Optional((.mb-from-mjd2000.420: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>> ) as .pat3: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>))
           -> .mb-from-mjd2000.420;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>> ) as .pat4: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>))
           -> std/core/types/Nothing<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>;
      }));
  };
inline fun timescale // inline size: 0
  = fn(i: instant){
    match (i) {
      ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat1: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat2: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat0: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat3: std/core/types/string) : std/core/types/string, (.pat4: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x: timescale) : timescale) : instant ) as .pat: instant)
         -> .x;
    };
  };
fun timescale.1 // inline size: 5
  = fn(name: std/core/types/string, from-tai: (std/time/duration/duration) -> std/time/timestamp/timestamp, to-tai: (std/time/timestamp/timestamp) -> std/time/duration/duration, unit: (std/core/types/optional :: V -> V)<std/core/types/string>, seconds-in-day: (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>, to-mjd2000: (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>, from-mjd2000: (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>){
    std/time/instant/Timescale(name, (match (unit) {
        ((std/core/types/Optional((.unit.366: std/core/types/string) : std/core/types/string) : (std/core/types/optional :: V -> V)<std/core/types/string> ) as .pat: ((std/core/types/optional :: V -> V)<std/core/types/string>))
           -> .unit.366;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<std/core/types/string> ) as .pat0: ((std/core/types/optional :: V -> V)<std/core/types/string>))
           -> name;
      }), from-tai, to-tai, (match (seconds-in-day) {
        ((std/core/types/Optional((.seconds-in-day.371: (std/core/types/maybe :: V -> V)<(std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(std/time/timestamp/timestamp) -> std/time/timestamp/timespan>> ) as .pat1: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>))
           -> .seconds-in-day.371;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(std/time/timestamp/timestamp) -> std/time/timestamp/timespan>> ) as .pat2: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(std/time/timestamp/timestamp) -> std/time/timestamp/timespan>>))
           -> std/core/types/Nothing<(std/time/timestamp/timestamp) -> std/time/timestamp/timespan>;
      }), (match (to-mjd2000) {
        ((std/core/types/Optional((.to-mjd2000.376: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>> ) as .pat3: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>))
           -> .to-mjd2000.376;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>> ) as .pat4: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>>))
           -> std/core/types/Nothing<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>;
      }), (match (from-mjd2000) {
        ((std/core/types/Optional((.from-mjd2000.381: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>> ) as .pat5: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>))
           -> .from-mjd2000.381;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>> ) as .pat6: ((std/core/types/optional :: V -> V)<(std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>>))
           -> std/core/types/Nothing<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>;
      }));
  };
fun unsafe-add // inline size: 3
  = fn(i: instant, tspan: std/time/timestamp/timespan){
    std/time/instant/Instant((std/time/timestamp/Timestamp((std/num/ddouble/(+)((match ((match (i) {
            ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat01: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat11: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x1: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat21: timescale) : timescale) : instant ) as .pat4: instant)
               -> .x1;
          })) {
            ((.skip std/time/timestamp/Timestamp(((.skip std/num/ddouble/Ddouble((.pat0: std/core/types/double) : std/core/types/double, (.pat1: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat2: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat: std/time/timestamp/timestamp)
               -> .x;
          }), tspan)), (match ((match (i) {
          ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat01: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat11: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x1: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat21: timescale) : timescale) : instant ) as .pat4: instant)
             -> .x1;
        })) {
          ((.skip std/time/timestamp/Timestamp(((.skip std/num/ddouble/Ddouble((.pat10: std/core/types/double) : std/core/types/double, (.pat20: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .pat00: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.x0: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat3: std/time/timestamp/timestamp)
             -> .x0;
        }))), (match (i) {
        ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat13: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat22: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat02: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat31: std/core/types/string) : std/core/types/string, (.pat41: std/core/types/string) : std/core/types/string, (.pat50: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat60: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat70: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat80: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat90: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x2: timescale) : timescale) : instant ) as .pat12: instant)
           -> .x2;
      }));
  };
fun convert // inline size: 10
  = fn(t: std/time/timestamp/timestamp, from: timescale, to: timescale){
    match ((std/core/(==.3)((match (from) {
        ((.skip std/time/instant/Timescale((.x: std/core/types/string) : std/core/types/string, (.pat0: std/core/types/string) : std/core/types/string, (.pat1: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat2: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat3: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
           -> .x;
      }), (match (to) {
        ((.skip std/time/instant/Timescale((.x0: std/core/types/string) : std/core/types/string, (.pat00: std/core/types/string) : std/core/types/string, (.pat10: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat20: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat30: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat40: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat50: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat6: timescale)
           -> .x0;
      })))) {
      ((std/core/types/True() : std/core/types/bool ) as .pat7: std/core/types/bool)
         -> t;
      ((.skip std/core/types/False() : std/core/types/bool ) as .pat01: std/core/types/bool)
         -> (match ((match ((std/core/(==.3)((match (from) {
            ((.skip std/time/instant/Timescale((.pat02: std/core/types/string) : std/core/types/string, (.x1: std/core/types/string) : std/core/types/string, (.pat11: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat21: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat31: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat41: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat51: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat8: timescale)
               -> .x1;
          }), (match (to) {
            ((.skip std/time/instant/Timescale((.pat03: std/core/types/string) : std/core/types/string, (.x2: std/core/types/string) : std/core/types/string, (.pat12: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat22: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat32: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat42: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat52: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat9: timescale)
               -> .x2;
          })))) {
          ((std/core/types/True() : std/core/types/bool ) as .pat13: std/core/types/bool)
             -> std/core/(==.3)((match (from) {
                ((.skip std/time/instant/Timescale((.pat04: std/core/types/string) : std/core/types/string, (.x3: std/core/types/string) : std/core/types/string, (.pat15: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat23: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat33: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat43: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat53: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat14: timescale)
                   -> .x3;
              }), "UTC");
          (.pat24: std/core/types/bool)
             -> std/core/types/False;
        })) {
          ((std/core/types/True() : std/core/types/bool ) as .pat34: std/core/types/bool)
             -> t;
          ((.skip std/core/types/False() : std/core/types/bool ) as .pat44: std/core/types/bool)
             -> std/time/instant/from-tai(to)((std/time/instant/to-tai(from)(t)));
        });
    };
  };
fun timestamp-in // inline size: 10
  = fn(i: instant, tscale: timescale){
    match ((std/core/(==.3)((match ((match (i) {
        ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat19: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat26: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat06: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat36: std/core/types/string) : std/core/types/string, (.pat46: std/core/types/string) : std/core/types/string, (.pat55: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat61: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat71: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat81: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat91: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x5: timescale) : timescale) : instant ) as .pat18: instant)
           -> .x5;
      })) {
        ((.skip std/time/instant/Timescale((.x: std/core/types/string) : std/core/types/string, (.pat0: std/core/types/string) : std/core/types/string, (.pat1: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat2: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat3: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
           -> .x;
      }), (match (tscale) {
        ((.skip std/time/instant/Timescale((.x0: std/core/types/string) : std/core/types/string, (.pat00: std/core/types/string) : std/core/types/string, (.pat10: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat20: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat30: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat40: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat50: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat6: timescale)
           -> .x0;
      })))) {
      ((std/core/types/True() : std/core/types/bool ) as .pat7: std/core/types/bool)
         -> (match (i) {
          ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat05: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat17: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x4: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat35: std/core/types/string) : std/core/types/string, (.pat45: std/core/types/string) : std/core/types/string, (.pat54: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat60: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat70: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat80: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat90: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat25: timescale) : timescale) : instant ) as .pat16: instant)
             -> .x4;
        });
      ((.skip std/core/types/False() : std/core/types/bool ) as .pat01: std/core/types/bool)
         -> (match ((match ((std/core/(==.3)((match ((match (i) {
            ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat19: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat26: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat06: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat36: std/core/types/string) : std/core/types/string, (.pat46: std/core/types/string) : std/core/types/string, (.pat55: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat61: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat71: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat81: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat91: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x5: timescale) : timescale) : instant ) as .pat18: instant)
               -> .x5;
          })) {
            ((.skip std/time/instant/Timescale((.pat02: std/core/types/string) : std/core/types/string, (.x1: std/core/types/string) : std/core/types/string, (.pat11: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat21: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat31: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat41: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat51: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat8: timescale)
               -> .x1;
          }), (match (tscale) {
            ((.skip std/time/instant/Timescale((.pat03: std/core/types/string) : std/core/types/string, (.x2: std/core/types/string) : std/core/types/string, (.pat12: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat22: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat32: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat42: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat52: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat9: timescale)
               -> .x2;
          })))) {
          ((std/core/types/True() : std/core/types/bool ) as .pat13: std/core/types/bool)
             -> std/core/(==.3)((match ((match (i) {
                ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat19: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat26: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat06: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat36: std/core/types/string) : std/core/types/string, (.pat46: std/core/types/string) : std/core/types/string, (.pat55: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat61: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat71: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat81: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat91: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x5: timescale) : timescale) : instant ) as .pat18: instant)
                   -> .x5;
              })) {
                ((.skip std/time/instant/Timescale((.pat04: std/core/types/string) : std/core/types/string, (.x3: std/core/types/string) : std/core/types/string, (.pat15: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat23: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat33: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat43: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat53: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat14: timescale)
                   -> .x3;
              }), "UTC");
          (.pat24: std/core/types/bool)
             -> std/core/types/False;
        })) {
          ((std/core/types/True() : std/core/types/bool ) as .pat34: std/core/types/bool)
             -> (match (i) {
              ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat05: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat17: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x4: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat35: std/core/types/string) : std/core/types/string, (.pat45: std/core/types/string) : std/core/types/string, (.pat54: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat60: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat70: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat80: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat90: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat25: timescale) : timescale) : instant ) as .pat16: instant)
                 -> .x4;
            });
          ((.skip std/core/types/False() : std/core/types/bool ) as .pat44: std/core/types/bool)
             -> std/time/instant/from-tai(tscale)((std/time/instant/to-tai((match (i) {
              ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat19: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat26: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat06: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat36: std/core/types/string) : std/core/types/string, (.pat46: std/core/types/string) : std/core/types/string, (.pat55: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat61: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat71: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat81: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat91: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x5: timescale) : timescale) : instant ) as .pat18: instant)
                 -> .x5;
            }))((match (i) {
              ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat05: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat17: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x4: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat35: std/core/types/string) : std/core/types/string, (.pat45: std/core/types/string) : std/core/types/string, (.pat54: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat60: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat70: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat80: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat90: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat25: timescale) : timescale) : instant ) as .pat16: instant)
                 -> .x4;
            }))));
        });
    };
  };
fun use-timescale // inline size: 4
  = fn(i: instant, tscale: timescale){
    match ((std/core/(==.3)((match ((match (i) {
        ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat10: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat20: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat00: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat50: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat60: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x0: timescale) : timescale) : instant ) as .pat6: instant)
           -> .x0;
      })) {
        ((.skip std/time/instant/Timescale((.x: std/core/types/string) : std/core/types/string, (.pat0: std/core/types/string) : std/core/types/string, (.pat1: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat2: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat3: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
           -> .x;
      }), (match (tscale) {
        ((.skip std/time/instant/Timescale((.x1: std/core/types/string) : std/core/types/string, (.pat01: std/core/types/string) : std/core/types/string, (.pat12: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat21: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat31: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat41: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat51: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat11: timescale)
           -> .x1;
      })))) {
      ((std/core/types/True() : std/core/types/bool ) as .pat13: std/core/types/bool)
         -> i;
      ((.skip std/core/types/False() : std/core/types/bool ) as .pat02: std/core/types/bool)
         -> std/time/instant/Instant((std/time/instant/timestamp-in(i, tscale)), tscale);
    };
  };
fun duration // inline size: 3
  = fn(i: instant){
    val t.4540 : std/time/timestamp/timestamp
          = std/time/instant/timestamp-in(i, std/time/instant/ts-tai);
    std/time/duration/Duration((std/time/timestamp/unsafe-timespan-withleap(t.4540)));
  };
fun (-.1) // inline size: 5
  = fn(i: instant, j: instant){
    val d.4541 : std/time/duration/duration
      = std/time/instant/duration(i);
    val e.4542 : std/time/duration/duration
      = std/time/instant/duration(j);
    val e0.2276 : std/time/duration/duration
      = std/time/duration/(~)(e.4542);
    std/time/duration/Duration((std/num/ddouble/(+)((match (d.4541) {
        ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat0: std/core/types/double) : std/core/types/double, (.pat1: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat: std/time/duration/duration)
           -> .x;
      }), (match (e0.2276) {
        ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat00: std/core/types/double) : std/core/types/double, (.pat10: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x0: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat2: std/time/duration/duration)
           -> .x0;
      }))));
  };
fun (==) // inline size: 1
  = fn(t1: timescale, t2: timescale){
    std/core/(==.3)((match (t1) {
        ((.skip std/time/instant/Timescale((.x: std/core/types/string) : std/core/types/string, (.pat0: std/core/types/string) : std/core/types/string, (.pat1: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat2: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat3: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat4: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat5: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat: timescale)
           -> .x;
      }), (match (t2) {
        ((.skip std/time/instant/Timescale((.x0: std/core/types/string) : std/core/types/string, (.pat00: std/core/types/string) : std/core/types/string, (.pat10: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat20: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat30: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat40: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat50: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat6: timescale)
           -> .x0;
      }));
  };
fun compare // inline size: 5
  = fn(i: instant, j: instant){
    std/time/timestamp/compare((match (i) {
        ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat0: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat1: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat3: std/core/types/string) : std/core/types/string, (.pat4: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat2: timescale) : timescale) : instant ) as .pat: instant)
           -> .x;
      }), val instant0.4546 : instant
                = (match ((std/core/(==.3)((match ((match (j) {
                    ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat15: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat22: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat02: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat32: std/core/types/string) : std/core/types/string, (.pat42: std/core/types/string) : std/core/types/string, (.pat52: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat61: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat71: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat81: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat91: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x2: timescale) : timescale) : instant ) as .pat14: instant)
                       -> .x2;
                  })) {
                    ((.skip std/time/instant/Timescale((.x1: std/core/types/string) : std/core/types/string, (.pat01: std/core/types/string) : std/core/types/string, (.pat13: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat21: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat31: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat41: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat51: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat12: timescale)
                       -> .x1;
                  }), (match ((match (i) {
                    ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat110: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat24: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat05: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat34: std/core/types/string) : std/core/types/string, (.pat44: std/core/types/string) : std/core/types/string, (.pat54: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat62: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat72: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat82: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat92: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x4: timescale) : timescale) : instant ) as .pat19: instant)
                       -> .x4;
                  })) {
                    ((.skip std/time/instant/Timescale((.x3: std/core/types/string) : std/core/types/string, (.pat03: std/core/types/string) : std/core/types/string, (.pat17: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat23: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat33: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat43: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat53: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat16: timescale)
                       -> .x3;
                  })))) {
                  ((std/core/types/True() : std/core/types/bool ) as .pat18: std/core/types/bool)
                     -> j;
                  ((.skip std/core/types/False() : std/core/types/bool ) as .pat04: std/core/types/bool)
                     -> std/time/instant/Instant((std/time/instant/timestamp-in(j, (match (i) {
                          ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat110: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat24: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat05: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat34: std/core/types/string) : std/core/types/string, (.pat44: std/core/types/string) : std/core/types/string, (.pat54: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat62: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat72: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat82: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat92: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x4: timescale) : timescale) : instant ) as .pat19: instant)
                             -> .x4;
                        }))), (match (i) {
                        ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat110: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat24: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat05: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat34: std/core/types/string) : std/core/types/string, (.pat44: std/core/types/string) : std/core/types/string, (.pat54: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat62: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat72: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat82: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat92: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x4: timescale) : timescale) : instant ) as .pat19: instant)
                           -> .x4;
                      }));
                });
      (match (instant0.4546) {
        ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat00: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat11: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x0: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat50: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat60: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat70: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat80: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat90: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat20: timescale) : timescale) : instant ) as .pat10: instant)
           -> .x0;
      }));
  };
fun (==.1) // inline size: 6
  = fn(i: instant, j: instant){
    val x.4553 : std/core/types/order
          = std/time/instant/compare(i, j);
    std/core/(==.1)((std/core/int.5(x.4553)), (match (std/core/types/Eq) {
        ((std/core/types/Lt() : std/core/types/order ) as .pat: std/core/types/order)
           -> std/core/(-)(0, 1);
        ((std/core/types/Eq() : std/core/types/order ) as .pat0: std/core/types/order)
           -> 0;
        ((.skip std/core/types/Gt() : std/core/types/order ) as .pat1: std/core/types/order)
           -> 1;
      }));
  };
fun instant // inline size: 1
  = fn(ts: timescale, t: std/time/timestamp/timestamp){
    std/time/instant/Instant(t, ts);
  };
fun instant.1 // inline size: 2
  = fn(d: std/time/duration/duration){
    val t.4564 : std/time/timestamp/timestamp
          = std/time/duration/timestamp(d);
    std/time/instant/Instant(t.4564, std/time/instant/ts-tai);
  };
fun instant.2 // inline size: 5
  = fn(ts: timescale, days: std/core/types/int, secs: std/time/timestamp/timespan, leap: (std/core/types/optional :: V -> V)<std/core/types/int>){
    val t.4566 : std/time/timestamp/timestamp
          = std/time/timestamp/timestamp-days(days, (std/core/types/Optional<std/time/timestamp/timespan>(secs)), (std/core/types/Optional<std/core/types/int>((match (leap) {
              ((std/core/types/Optional((.leap.1630: std/core/types/int) : std/core/types/int) : (std/core/types/optional :: V -> V)<std/core/types/int> ) as .pat: ((std/core/types/optional :: V -> V)<std/core/types/int>))
                 -> .leap.1630;
              ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<std/core/types/int> ) as .pat0: ((std/core/types/optional :: V -> V)<std/core/types/int>))
                 -> 0;
            }))));
    std/time/instant/Instant(t.4566, ts);
  };
fun to-tai.1 // inline size: 3
  = fn(ts: timescale, t: std/time/timestamp/timestamp){
    val t0.4567 : std/time/timestamp/timestamp
          = std/time/instant/convert(t, ts, std/time/instant/ts-tai);
    std/time/duration/Duration((std/time/timestamp/unsafe-timespan-withleap(t0.4567)));
  };
fun (!=) // inline size: 6
  = fn(i: instant, j: instant){
    val x.4568 : std/core/types/order
          = std/time/instant/compare(i, j);
    std/core/(!=.1)((std/core/int.5(x.4568)), (match (std/core/types/Eq) {
        ((std/core/types/Lt() : std/core/types/order ) as .pat: std/core/types/order)
           -> std/core/(-)(0, 1);
        ((std/core/types/Eq() : std/core/types/order ) as .pat0: std/core/types/order)
           -> 0;
        ((.skip std/core/types/Gt() : std/core/types/order ) as .pat1: std/core/types/order)
           -> 1;
      }));
  };
fun (<) // inline size: 6
  = fn(i: instant, j: instant){
    val x.4570 : std/core/types/order
          = std/time/instant/compare(i, j);
    std/core/(==.1)((std/core/int.5(x.4570)), (match (std/core/types/Lt) {
        ((std/core/types/Lt() : std/core/types/order ) as .pat: std/core/types/order)
           -> std/core/(-)(0, 1);
        ((std/core/types/Eq() : std/core/types/order ) as .pat0: std/core/types/order)
           -> 0;
        ((.skip std/core/types/Gt() : std/core/types/order ) as .pat1: std/core/types/order)
           -> 1;
      }));
  };
fun (<=) // inline size: 6
  = fn(i: instant, j: instant){
    val x.4572 : std/core/types/order
          = std/time/instant/compare(i, j);
    std/core/(!=.1)((std/core/int.5(x.4572)), (match (std/core/types/Gt) {
        ((std/core/types/Lt() : std/core/types/order ) as .pat: std/core/types/order)
           -> std/core/(-)(0, 1);
        ((std/core/types/Eq() : std/core/types/order ) as .pat0: std/core/types/order)
           -> 0;
        ((.skip std/core/types/Gt() : std/core/types/order ) as .pat1: std/core/types/order)
           -> 1;
      }));
  };
fun (>) // inline size: 6
  = fn(i: instant, j: instant){
    val x.4574 : std/core/types/order
          = std/time/instant/compare(i, j);
    std/core/(==.1)((std/core/int.5(x.4574)), (match (std/core/types/Gt) {
        ((std/core/types/Lt() : std/core/types/order ) as .pat: std/core/types/order)
           -> std/core/(-)(0, 1);
        ((std/core/types/Eq() : std/core/types/order ) as .pat0: std/core/types/order)
           -> 0;
        ((.skip std/core/types/Gt() : std/core/types/order ) as .pat1: std/core/types/order)
           -> 1;
      }));
  };
fun (>=) // inline size: 6
  = fn(i: instant, j: instant){
    val x.4576 : std/core/types/order
          = std/time/instant/compare(i, j);
    std/core/(!=.1)((std/core/int.5(x.4576)), (match (std/core/types/Lt) {
        ((std/core/types/Lt() : std/core/types/order ) as .pat: std/core/types/order)
           -> std/core/(-)(0, 1);
        ((std/core/types/Eq() : std/core/types/order ) as .pat0: std/core/types/order)
           -> 0;
        ((.skip std/core/types/Gt() : std/core/types/order ) as .pat1: std/core/types/order)
           -> 1;
      }));
  };
fun add-days // inline size: 2
  = fn(i: instant, days: std/core/types/int){
    std/time/instant/Instant((std/time/timestamp/add-days((match (i) {
          ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat0: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat1: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat3: std/core/types/string) : std/core/types/string, (.pat4: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat2: timescale) : timescale) : instant ) as .pat: instant)
             -> .x;
        }), days)), (match (i) {
        ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat11: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat20: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat00: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat50: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat60: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat70: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat80: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat90: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x0: timescale) : timescale) : instant ) as .pat10: instant)
           -> .x0;
      }));
  };
fun add-duration-in // inline size: 4
  = fn(i: instant, tscale: timescale, t: std/time/timestamp/timespan){
    val i0.4580 : instant
          = std/time/instant/use-timescale(i, tscale);
    std/time/instant/Instant((std/time/timestamp/Timestamp((std/num/ddouble/(+)((match ((match (i0.4580) {
            ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat01: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat11: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x1: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat21: timescale) : timescale) : instant ) as .pat4: instant)
               -> .x1;
          })) {
            ((.skip std/time/timestamp/Timestamp(((.skip std/num/ddouble/Ddouble((.pat0: std/core/types/double) : std/core/types/double, (.pat1: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat2: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat: std/time/timestamp/timestamp)
               -> .x;
          }), t)), (match ((match (i0.4580) {
          ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat01: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat11: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x1: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat21: timescale) : timescale) : instant ) as .pat4: instant)
             -> .x1;
        })) {
          ((.skip std/time/timestamp/Timestamp(((.skip std/num/ddouble/Ddouble((.pat10: std/core/types/double) : std/core/types/double, (.pat20: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .pat00: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.x0: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat3: std/time/timestamp/timestamp)
             -> .x0;
        }))), (match (i0.4580) {
        ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat13: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat22: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat02: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat31: std/core/types/string) : std/core/types/string, (.pat41: std/core/types/string) : std/core/types/string, (.pat50: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat60: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat70: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat80: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat90: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .x2: timescale) : timescale) : instant ) as .pat12: instant)
           -> .x2;
      }));
  };
fun days // inline size: 8
  = fn(i: instant){
    val .this.3806 : (std/core/types/int, std/num/ddouble/ddouble)
          = val secs : std/num/ddouble/ddouble
              = std/num/ddouble/floor((match ((match (i) {
                ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat000: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat100: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x00: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat21: timescale) : timescale) : instant ) as .pat11: instant)
                   -> .x00;
              })) {
                ((.skip std/time/timestamp/Timestamp(((.skip std/num/ddouble/Ddouble((.pat0: std/core/types/double) : std/core/types/double, (.pat1: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat2: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat: std/time/timestamp/timestamp)
                   -> .x;
              }));
            val frac : std/num/ddouble/ddouble
              = std/num/ddouble/(+)((match ((match (i) {
                  ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat000: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat100: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x00: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat30: std/core/types/string) : std/core/types/string, (.pat40: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat21: timescale) : timescale) : instant ) as .pat11: instant)
                     -> .x00;
                })) {
                  ((.skip std/time/timestamp/Timestamp(((.skip std/num/ddouble/Ddouble((.pat00: std/core/types/double) : std/core/types/double, (.pat10: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x0: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat20: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .pat3: std/time/timestamp/timestamp)
                     -> .x0;
                }), (std/num/ddouble/(~)(secs)));
          match ((std/core/divmod((std/num/ddouble/int(secs, (std/core/types/None<std/core/types/int>))), 86400))) {
            ((.skip std/core/types/(,)((days: std/core/types/int) : std/core/types/int, (dsecs: std/core/types/int) : std/core/types/int) : (std/core/types/int, std/core/types/int) ) as .pat4: (std/core/types/int, std/core/types/int))
               -> std/core/types/(,)<std/core/types/int,std/num/ddouble/ddouble>(days, (std/num/ddouble/(+)((std/num/ddouble/ddouble.1(dsecs)), frac)));
          };
    match (.this.3806) {
      ((.skip std/core/types/(,)((.x1: std/core/types/int) : std/core/types/int, (.pat01: std/num/ddouble/ddouble) : std/num/ddouble/ddouble) : (std/core/types/int, std/num/ddouble/ddouble) ) as .pat12: (std/core/types/int, std/num/ddouble/ddouble))
         -> .x1;
    };
  };
fun days-clock // inline size: 4
  = fn(i: instant){
    match ((std/time/timestamp/days-seconds((match (i) {
      ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat00: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat10: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat3: std/core/types/string) : std/core/types/string, (.pat4: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat20: timescale) : timescale) : instant ) as .pat2: instant)
         -> .x;
    })))) {
      ((.skip std/core/types/(,)((days: std/core/types/int) : std/core/types/int, ((.skip std/num/ddouble/Ddouble((.pat0: std/core/types/double) : std/core/types/double, (.pat1: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as secs: std/num/ddouble/ddouble) : std/num/ddouble/ddouble) : (std/core/types/int, std/num/ddouble/ddouble) ) as .pat: (std/core/types/int, std/num/ddouble/ddouble))
         -> std/core/types/(,)<std/core/types/int,std/time/date/clock>(days, (std/time/date/clock.3(secs, (std/time/timestamp/leap((match (i) {
              ((.skip std/time/instant/Instant(((.skip std/time/timestamp/Timestamp((.pat00: std/time/timestamp/timespan) : std/time/timestamp/timespan, (.pat10: std/core/types/int32) : std/core/types/int32) : std/time/timestamp/timestamp ) as .x: std/time/timestamp/timestamp) : std/time/timestamp/timestamp, ((.skip std/time/instant/Timescale((.pat3: std/core/types/string) : std/core/types/string, (.pat4: std/core/types/string) : std/core/types/string, (.pat5: (std/time/duration/duration) -> std/time/timestamp/timestamp) : (std/time/duration/duration) -> std/time/timestamp/timestamp, (.pat6: (std/time/timestamp/timestamp) -> std/time/duration/duration) : (std/time/timestamp/timestamp) -> std/time/duration/duration, (.pat7: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp) -> std/time/timestamp/timespan>, (.pat8: (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>) : (std/core/types/maybe :: V -> V)<(t : std/time/timestamp/timestamp, tzdelta : std/time/timestamp/timespan) -> std/num/ddouble/ddouble>, (.pat9: (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : (std/core/types/maybe :: V -> V)<(days : std/core/types/int, frac : std/num/ddouble/ddouble) -> std/time/timestamp/timestamp>) : timescale ) as .pat20: timescale) : timescale) : instant ) as .pat2: instant)
                 -> .x;
            }))))));
    };
  };
inline val epoch // inline size: 0
  = std/time/instant/instant.1(std/time/duration/duration0);
inline val gps2000 // inline size: 0
  = std/time/duration/duration.1(630720000, (std/core/types/None<std/core/types/double>));
fun gps-instant // inline size: 6
  = fn(gps: std/time/duration/duration){
    val d.4590 : std/time/duration/duration
      = val e.4737 : std/time/duration/duration
          = std/time/duration/duration.1(630720000, (std/core/types/None<std/core/types/double>));
        val e0.2276 : std/time/duration/duration
          = std/time/duration/(~)(e.4737);
      std/time/duration/Duration((std/num/ddouble/(+)((match (gps) {
          ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat0: std/core/types/double) : std/core/types/double, (.pat1: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat: std/time/duration/duration)
             -> .x;
        }), (match (e0.2276) {
          ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat00: std/core/types/double) : std/core/types/double, (.pat10: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x0: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat2: std/time/duration/duration)
             -> .x0;
        }))));
    val t.4592 : std/time/timestamp/timestamp
      = std/time/duration/timestamp(d.4590);
    std/time/instant/Instant(t.4592, std/time/instant/ts-tai);
  };
fun gps-instant.1 // inline size: 10
  = fn(weeks: std/core/types/int, secs: std/time/duration/duration){
    val gps.4593 : std/time/duration/duration
      = val d0.4594 : std/time/duration/duration
              = std/time/duration/duration.1((std/core/(*)(weeks, 25200)), (std/core/types/None<std/core/types/double>));
      std/time/duration/Duration((std/num/ddouble/(+)((match (d0.4594) {
          ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat0: std/core/types/double) : std/core/types/double, (.pat1: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat: std/time/duration/duration)
             -> .x;
        }), (match (secs) {
          ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat00: std/core/types/double) : std/core/types/double, (.pat10: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x0: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat2: std/time/duration/duration)
             -> .x0;
        }))));
    val d.4596 : std/time/duration/duration
      = val e.4739 : std/time/duration/duration
          = std/time/duration/duration.1(630720000, (std/core/types/None<std/core/types/double>));
        val e0.2276 : std/time/duration/duration
          = std/time/duration/(~)(e.4739);
      std/time/duration/Duration((std/num/ddouble/(+)((match (gps.4593) {
          ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat01: std/core/types/double) : std/core/types/double, (.pat11: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x1: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat3: std/time/duration/duration)
             -> .x1;
        }), (match (e0.2276) {
          ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat000: std/core/types/double) : std/core/types/double, (.pat100: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x00: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat20: std/time/duration/duration)
             -> .x00;
        }))));
    val t.4598 : std/time/timestamp/timestamp
      = std/time/duration/timestamp(d.4596);
    std/time/instant/Instant(t.4598, std/time/instant/ts-tai);
  };
fun gps-timestamp // inline size: 6
  = fn(i: instant){
    val d.4613 : std/time/duration/duration
      = val t.4615 : std/time/timestamp/timestamp
              = std/time/instant/timestamp-in(i, std/time/instant/ts-gps);
      std/time/duration/Duration((std/time/timestamp/unsafe-timespan-withleap(t.4615)));
    val e.4614 : std/time/duration/duration
      = std/time/duration/duration.1(630720000, (std/core/types/None<std/core/types/double>));
    std/time/duration/Duration((std/num/ddouble/(+)((match (d.4613) {
        ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat0: std/core/types/double) : std/core/types/double, (.pat1: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat: std/time/duration/duration)
           -> .x;
      }), (match (e.4614) {
        ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat00: std/core/types/double) : std/core/types/double, (.pat10: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x0: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat2: std/time/duration/duration)
           -> .x0;
      }))));
  };
fun max // inline size: 2
  = fn(i: instant, j: instant){
    match ((std/time/instant/(>=)(i, j))) {
      ((std/core/types/True() : std/core/types/bool ) as .pat: std/core/types/bool)
         -> i;
      ((.skip std/core/types/False() : std/core/types/bool ) as .pat0: std/core/types/bool)
         -> j;
    };
  };
fun min // inline size: 2
  = fn(i: instant, j: instant){
    match ((std/time/instant/(<=)(i, j))) {
      ((std/core/types/True() : std/core/types/bool ) as .pat: std/core/types/bool)
         -> i;
      ((.skip std/core/types/False() : std/core/types/bool ) as .pat0: std/core/types/bool)
         -> j;
    };
  };
fun show.1 // inline size: 7
  = fn(t: std/time/timestamp/timestamp, max-prec: (std/core/types/optional :: V -> V)<std/core/types/int>, secs-width: (std/core/types/optional :: V -> V)<std/core/types/int>, unit: (std/core/types/optional :: V -> V)<std/core/types/string>){
    std/time/timestamp/ts-show(t, (std/core/types/Optional<std/core/types/int>((match (max-prec) {
        ((std/core/types/Optional((.max-prec.4280: std/core/types/int) : std/core/types/int) : (std/core/types/optional :: V -> V)<std/core/types/int> ) as .pat: ((std/core/types/optional :: V -> V)<std/core/types/int>))
           -> .max-prec.4280;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<std/core/types/int> ) as .pat0: ((std/core/types/optional :: V -> V)<std/core/types/int>))
           -> 9;
      }))), (std/core/types/Optional<std/core/types/int>((match (secs-width) {
        ((std/core/types/Optional((.secs-width.4284: std/core/types/int) : std/core/types/int) : (std/core/types/optional :: V -> V)<std/core/types/int> ) as .pat1: ((std/core/types/optional :: V -> V)<std/core/types/int>))
           -> .secs-width.4284;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<std/core/types/int> ) as .pat2: ((std/core/types/optional :: V -> V)<std/core/types/int>))
           -> 1;
      }))), (std/core/types/Optional<std/core/types/string>((match (unit) {
        ((std/core/types/Optional((.unit.4288: std/core/types/string) : std/core/types/string) : (std/core/types/optional :: V -> V)<std/core/types/string> ) as .pat3: ((std/core/types/optional :: V -> V)<std/core/types/string>))
           -> .unit.4288;
        ((.skip std/core/types/None() : (std/core/types/optional :: V -> V)<std/core/types/string> ) as .pat4: ((std/core/types/optional :: V -> V)<std/core/types/string>))
           -> "";
      }))));
  };
inline val tt2000 // inline size: 0
  = std/time/duration/duration.1(630720000, (std/core/types/None<std/core/types/double>));
fun tt-instant // inline size: 6
  = fn(i: instant){
    val d.4718 : std/time/duration/duration
      = val t.4720 : std/time/timestamp/timestamp
              = std/time/instant/timestamp-in(i, std/time/instant/ts-tt);
      std/time/duration/Duration((std/time/timestamp/unsafe-timespan-withleap(t.4720)));
    val e.4719 : std/time/duration/duration
      = std/time/duration/duration.1(630720000, (std/core/types/None<std/core/types/double>));
    std/time/duration/Duration((std/num/ddouble/(+)((match (d.4718) {
        ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat0: std/core/types/double) : std/core/types/double, (.pat1: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat: std/time/duration/duration)
           -> .x;
      }), (match (e.4719) {
        ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat00: std/core/types/double) : std/core/types/double, (.pat10: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x0: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat2: std/time/duration/duration)
           -> .x0;
      }))));
  };
fun tt-instant.1 // inline size: 6
  = fn(tt: std/time/duration/duration){
    val d.4721 : std/time/duration/duration
      = val e.4749 : std/time/duration/duration
          = std/time/duration/duration.1(630720000, (std/core/types/None<std/core/types/double>));
        val e0.2276 : std/time/duration/duration
          = std/time/duration/(~)(e.4749);
      std/time/duration/Duration((std/num/ddouble/(+)((match (tt) {
          ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat0: std/core/types/double) : std/core/types/double, (.pat1: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat: std/time/duration/duration)
             -> .x;
        }), (match (e0.2276) {
          ((.skip std/time/duration/Duration(((.skip std/num/ddouble/Ddouble((.pat00: std/core/types/double) : std/core/types/double, (.pat10: std/core/types/double) : std/core/types/double) : std/num/ddouble/ddouble ) as .x0: std/time/timestamp/timespan) : std/time/timestamp/timespan) : std/time/duration/duration ) as .pat2: std/time/duration/duration)
             -> .x0;
        }))));
    val t.4723 : std/time/timestamp/timestamp
      = std/time/duration/timestamp(d.4721);
    std/time/instant/Instant(t.4723, std/time/instant/ts-tai);
  };